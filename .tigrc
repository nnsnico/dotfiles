# View settings
set main-view = id date:display=custom,format="%Y/%m/%d %H:%M" author commit-title:graph=v2,refs=yes
set pager-view  = line-number:yes,interval=1 text
set stage-view  = line-number:yes,interval=1 text
set log-view    = line-number:yes,interval=1 text
set blob-view   = line-number:yes,interval=1 text
set diff-view   = line-number:yes,interval=1 text:yes,commit-title-overflow=no

# git
## Fetch branch by `f` (default: :toggle file-name / :toggle commit-title-refs)
bind generic F      ?git fetch %(remote)
bind main    F      ?git fetch %(remote)

## `:toggle file-name / :toggle commit-title-refs` by `Alt-f`
bind generic <Esc>f :toggle file-name
bind main    <Esc>f :toggle commit-title-refs

## Pull branch by `U(shift-u)`
bind generic U      ?git pull %(remote)

## Update target branch by `Alt-u`
bind main    <Esc>u ?sh -c "git checkout %(branch) && git pull %(remote) --ff-only && git checkout -"
bind diff    <Esc>u ?sh -c "git checkout %(branch) && git pull %(remote) --ff-only && git checkout -"
bind refs    <Esc>u ?sh -c "git checkout %(branch) && git pull %(remote) --ff-only && git checkout -"

## Push branch by `P(shift-p)`
bind generic P      ?git push -u %(remote) %(repo:head)

## Delete branch by `D(shift-d)`
bind refs    D      ?git branch -d %(branch)

## Remove untracked file by `D(shift-d)` on status-view
bind status  D      ?git clean -d -f -- %(file)

## Remove git stash by `D(shift-d)` on stash-view
bind stash   D      ?git stash drop %(stash)

## Remove file by `D(shift-d)` on tree-view
bind tree    D      ?git rm %(file)

## Remove all untracked file by `x`
bind main    x      ?git clean -d -f
bind status  x      ?git clean -d -f

## Remove all merged local branch (expect for master/develop)
bind refs    x      ?sh -c "git branch --merged | grep -vE '^\\*|master$|develop$' | xargs -I % git branch -d %"

