# ------------------------------------ View ------------------------------------

set main-view         = id date:display=custom,format="%Y/%m/%d %H:%M" author commit-title:graph=v2,refs=yes
set pager-view        = line-number:yes,interval=1 text
set stage-view        = line-number:yes,interval=1 text
set log-view          = line-number:yes,interval=1 text
set blob-view         = line-number:yes,interval=1 text
set diff-view         = line-number:yes,interval=1 text:yes,commit-title-overflow=no
set split-view-height = 80%

# --------------------------------- Navigation ---------------------------------

bind generic <Ctrl-F>  :move-page-down
bind generic <Ctrl-B>  :move-page-up
bind generic <Ctrl-G>  :move-first-line
bind generic \<Ctrl-G> :move-last-line
bind generic s         :view-status
bind generic S         :view-stash

# ------------------------------------ Git -------------------------------------

# generic

bind generic U  ?git pull %(remote)                 # pull repository
bind generic P  ?git push -u %(remote) %(repo:head) # push branch
bind generic F  ?git fetch %(remote)                # fetch repository
bind generic \f :toggle file-name                   # toggle to show file name

# main

bind main \u ?sh -c "git checkout %(branch) && git pull %(remote) --ff-only && git checkout -" # checkout branch
bind main x  ?git clean -d -f                                                                  # delete untracked file (all)
bind main F  ?git fetch %(remote)
bind main \f :toggle commit-title-refs                                                         # toogle to show refs(e.g., release-tag)
bind main y  +sh -c "printf %(commit) | pbcopy && echo 'Copy commit id: %(commit)'"

# diff

bind diff \u ?sh -c "git checkout %(branch) && git pull %(remote) --ff-only && git checkout -"

# tree

bind tree D ?git rm %(file) # delete file on tree-view

# refs

bind refs D  ?git branch -d %(branch)                                                                     # delete branch
bind refs \u ?sh -c "git checkout %(branch) && git pull %(remote) --ff-only && git checkout -"
bind refs x  ?sh -c "git branch --merged | grep -vE '^\\*|master$|develop$' | xargs -I % git branch -d %" # Remove all merged local branch (expect for master/develop)

# status

bind status C !git commit -v              # Add commit option `-v (same as --verbose)`
bind status c ?git checkout %(file)       # Add commit option `-v (same as --verbose)`
bind status D ?git clean -d -f -- %(file) # delete untracked file (current line)
bind status x ?git clean -d -f

# stash

bind stash D ?git stash drop %(stash) # delete stash
