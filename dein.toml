[[plugins]]
repo = 'Shougo/dein.vim'

[[plugins]]
repo = 'Shougo/neosnippet.vim'
depends = ['neosnippet-snippets', 'context_filetype.vim']
on_event = 'InsertCharPre'
on_ft = 'snippet'

[[plugins]]
repo = 'Shougo/neosnippet-snippets'

[[plugins]]
repo = 'Shougo/context_filetype.vim'

[[plugins]]
repo = 'Shougo/vimproc.vim'
hook_post_update = '''
  if has('win32')
    let cmd = 'tools\\update-dll-mingw'
  elseif has('win32unix') " for Cygwin
    let cmd = 'make -f make_cygwin.mak'
  elseif executable('gmake')
    let cmd = 'gmake'
  else
    let cmd = 'make'
  endif
  let g:dein#plugin.build = cmd
'''

[[plugins]]
repo = 'Shougo/deoplete.nvim'
hook_add = 'let g:deoplete#enable_at_startup = 0'

[[plugins]]
repo = 'junegunn/fzf.vim'
hook_add = '''
  nnoremap zf :Files<CR>
  nnoremap zg :GFiles?<CR>
  nnoremap zh :History<CR>

  if has('nvim')
    let g:fzf_layout = { 'window': 'call FloatingFZF()' }

    function! FloatingFZF()
      let buf = nvim_create_buf(v:false, v:true)
      call setbufvar(buf, '&signcolumn', 'no')

      let height = &lines / 3
      let width = float2nr(&columns - (&columns * 2 / 10))
      let col = float2nr((&columns - width) / 2)

      let opts = {
            \ 'relative': 'editor',
            \ 'row': 1,
            \ 'col': col,
            \ 'width': width,
            \ 'height': height
            \ }

      call nvim_open_win(buf, v:true, opts)
    endfunction
  endif
'''

[[plugins]]
repo = '/usr/local/opt/fzf'

[[plugins]]
repo = 'roxma/nvim-yarp'

[[plugins]]
repo = 'roxma/vim-hug-neovim-rpc'

[[plugins]]
repo = 'scrooloose/nerdtree'
hook_add = '''
  autocmd StdinReadPre * let s:std_in=1
  autocmd VimEnter * if argc() == 0 && !exists("s:std_in") | NERDTree | endif

  map <C-t> :NERDTreeToggle<CR>
  nmap <C-l> gt
  nmap <C-h> gT
  nnoremap <C-k> :NERDTreeFind<CR>
  nmap gs :split<CR>
  nmap gv :vsplit<CR>
'''

[[plugins]]
repo = 'tiagofumo/vim-nerdtree-syntax-highlight'

[[plugins]]
repo = 'Xuyuanp/nerdtree-git-plugin'
hook_add = '''
let g:NERDTreeIndicatorMapCustom = {
    \ "Modified"  : "✹",
    \ "Staged"    : "✚",
    \ "Untracked" : "✭",
    \ "Renamed"   : "➜",
    \ "Unmerged"  : "═",
    \ "Deleted"   : "✖",
    \ "Dirty"     : "✗",
    \ "Clean"     : "✔︎",
    \ 'Ignored'   : '☒',
    \ "Unknown"   : "?"
    \ }
'''

[[plugins]]
repo = 'ryanoasis/vim-devicons'

[[plugins]]
repo = 'ayu-theme/ayu-vim'
hook_add = '''
  set termguicolors
  let ayucolor="dark"
'''

[[plugins]]
repo = 'tyrannicaltoucan/vim-deep-space'

[[plugins]]
repo = 'romainl/Apprentice'

[[plugins]]
repo = 'luochen1990/rainbow'
hook_add = 'let g:rainbow_active = 1'

[[plugins]]
repo = 'tpope/vim-commentary'

[[plugins]]
repo = 'chase/focuspoint-vim'

[[plugins]]
repo = 'vim-airline/vim-airline'
hook_add = '''
let g:airline#extensions#tabline#enabled = 1
let g:airline#extensions#tabline#formatter = 'unique_tail_improved'
let g:airline_powerline_fonts = 1

let g:airline_section_b = '(´ワ｀ )'
let g:airline_section_c = '%t'
let g:airline_section_z = '%L lines %p%%'
'''

[[plugins]]
repo = 'vim-airline/vim-airline-themes'

[[plugins]]
repo = 'w0rp/ale'

[[plugins]]
repo = 'neoclide/coc.nvim'
merge = 0
rev = 'release'
hook_add = '''
nmap <silent> gd <Plug>(coc-definition)
nmap <silent> gy <Plug>(coc-type-definition)
nmap <silent> gi <Plug>(coc-implementation)
nmap <silent> gr <Plug>(coc-references)
'''

[[plugins]]
repo = 'tpope/vim-fugitive'

[[plugins]]
repo = 'airblade/vim-gitgutter'
hook_add = '''
  nmap <Space>hp <Plug>(GitGutterPreviewHunk)
  nmap <Space>ha <Plug>(GitGutterStageHunk)
  nmap <Space>hr <Plug>(GitGutterUndoHunk)

  let g:gitgutter_sign_removed = '-'
  let g:gitgutter_sign_removed_first_line = '-'
  if has('nvim')
    let g:gitgutter_highlight_linenrs = 1
  endif
'''

[[plugins]]
repo = 'nathanaelkane/vim-indent-guides'
hook_add = 'let g:indent_guides_enable_on_vim_startup = 1'

[[plugins]]
repo = 'cohama/lexima.vim'

[[plugins]]
repo = 'tpope/vim-surround'

[[plugins]]
repo = 'terryma/vim-multiple-cursors'

[[plugins]]
repo = 'editorconfig/editorconfig-vim'

[[plugins]]
repo = 'vim-scripts/autodate.vim'
hook_add = '''
  let autodate_format="%Y/%m/%d %A %H:%M:%S"
'''

[[plugins]]
repo = 'Chiel92/vim-autoformat'
hook_add = '''
  nmap <C-l> :Autoformat<CR>
  let g:formatdef_scalafmt = "'scalafmt --stdin 2>/dev/null'"
  let g:formatters_scala = ['scalafmt']
  let g:autoformat_autoindent = 0
  let g:autoformat_retab = 0
  let g:autoformat_remove_trailing_spaces = 0
'''
